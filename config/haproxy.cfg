global
    log stdout local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # SSL/TLS configuration
    ssl-default-bind-ciphers ECDHE+AESGCM:ECDHE+CHACHA20:RSA+AESGCM:RSA+SHA256:!aNULL:!MD5:!DSS
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Statistics interface
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE

# Main frontend
frontend aletheia_frontend
    bind *:80
    
    # ACL definitions for routing
    acl is_n8n path_beg /n8n
    acl is_chat path_beg /chat
    acl is_portal path_beg /portal
    acl is_api path_beg /api
    acl is_static path_end .js .css .png .jpg .jpeg .gif .ico .svg .woff .woff2 .ttf .eot
    
    # Health check endpoint
    acl is_health path /health
    http-request return status 200 content-type text/plain string "healthy" if is_health
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request reject if { sc_http_req_rate(0) gt 20 }
    
    # Security headers
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    
    # Routing decisions
    use_backend n8n_backend if is_n8n
    use_backend chat_backend if is_chat
    use_backend portal_backend if is_portal
    use_backend api_backend if is_api
    default_backend web_backend

# Backend definitions
backend web_backend
    balance roundrobin
    option httpchk GET /health
    server web1 web:80 check
    # Add more web servers for horizontal scaling
    # server web2 web2:80 check backup

backend n8n_backend
    balance roundrobin
    option httpchk GET /healthz
    http-request set-path %[path,regsub(^/n8n,)]
    server n8n1 n8n:5678 check
    # Add more n8n instances for scaling
    # server n8n2 n8n2:5678 check

backend chat_backend
    balance roundrobin
    option httpchk GET /api/health
    server chat1 lawyer-chat:3000 check
    # Add more chat instances for scaling
    # server chat2 lawyer-chat2:3000 check

backend portal_backend
    balance roundrobin
    option httpchk GET /health
    http-request set-path %[path,regsub(^/portal,)]
    server portal1 ai-portal:3000 check
    # Add more portal instances for scaling
    # server portal2 ai-portal2:3000 check

backend api_backend
    balance roundrobin
    option httpchk GET /health
    # Route API requests based on path
    acl is_rag_api path_beg /api/rag
    http-request set-path %[path,regsub(^/api/rag,)] if is_rag_api
    server haystack1 haystack-service:8000 check if is_rag_api
    
    # Default API routing
    http-request set-path %[path,regsub(^/api,)]
    server api1 web:80 check

# SSL frontend (for production)
frontend aletheia_ssl_frontend
    bind *:443 ssl crt /etc/ssl/certs/aletheia.pem
    
    # Redirect to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }
    
    # Same ACL and routing as HTTP frontend
    acl is_n8n path_beg /n8n
    acl is_chat path_beg /chat
    acl is_portal path_beg /portal
    acl is_api path_beg /api
    
    # Enhanced security headers for HTTPS
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    
    use_backend n8n_backend if is_n8n
    use_backend chat_backend if is_chat
    use_backend portal_backend if is_portal
    use_backend api_backend if is_api
    default_backend web_backend