services:
  web:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./website:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - frontend
      - backend
    depends_on:
      - n8n
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"  # Use environment variable
      POSTGRES_USER: "${DB_USER}"          # Use environment variable
      POSTGRES_DB: "${DB_NAME}"            # Use environment variable
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 5s
      retries: 3

  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - NODE_ENV=production
      - N8N_ENCRYPTION_KEY="${N8N_ENCRYPTION_KEY}"  # Use environment variable
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_CORS_ENABLED=true
      - N8N_CORS_ALLOW_ORIGIN="http://localhost:8080"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/custom-nodes:/home/node/.n8n/custom
      - ./n8n/local-files:/files
    networks:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "sh", "-c", "netstat -ln | grep 5678"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  n8n_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge