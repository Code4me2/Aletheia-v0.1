# Production environment specific configuration

# HTTPS server block for production
server {
    listen 443 ssl http2;
    server_name your-domain.com;  # Replace with actual domain
    
    # SSL configuration
    ssl_certificate /etc/ssl/certs/aletheia.crt;
    ssl_certificate_key /etc/ssl/private/aletheia.key;
    
    # Security headers (enhanced for production)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:;" always;
    
    # Enhanced rate limiting for production
    limit_req_zone $binary_remote_addr zone=prod_api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=prod_auth:10m rate=2r/s;
    
    # Main application
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Enhanced caching for production
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }
    }
    
    # n8n with production rate limiting
    location /n8n/ {
        limit_req zone=prod_api burst=10 nodelay;
        
        rewrite ^/n8n/(.*)$ /$1 break;
        proxy_pass http://n8n_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Prefix /n8n;
    }
    
    # Lawyer chat with authentication rate limiting
    location /chat/ {
        limit_req zone=prod_auth burst=5 nodelay;
        
        proxy_pass http://lawyer_chat_backend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Prefix /chat;
    }
    
    # AI Portal
    location /portal/ {
        limit_req zone=prod_api burst=8 nodelay;
        
        rewrite ^/portal/(.*)$ /$1 break;
        proxy_pass http://ai_portal_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Prefix /portal;
    }
    
    # API endpoints with stricter rate limiting
    location /api/ {
        limit_req zone=prod_api burst=15 nodelay;
        
        # Enhanced security for API endpoints
        if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$ ) {
            return 405;
        }
        
        # Route to appropriate service
        location /api/rag/ {
            rewrite ^/api/rag/(.*)$ /$1 break;
            proxy_pass http://haystack_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        return 404;
    }
}

# Redirect HTTP to HTTPS in production
server {
    listen 80;
    server_name your-domain.com;  # Replace with actual domain
    return 301 https://$server_name$request_uri;
}